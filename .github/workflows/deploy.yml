name: Deploy to GKE with Health Check & Rollback

on:
  push:
    branches: [ main ]

env:
  DOCKER_IMAGE: ${{ secrets.DOCKER_INB_USERNAME }}/docker-healthcheck-app
  GKE_CLUSTER: test-monitoring
  GKE_ZONE: us-central1-a
  APP_NAME: docker-healthcheck-app

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_INB_USERNAME }}
          password: ${{ secrets.DOCKER_INB_TOKEN }}
      - name: Build and push Docker image
        run: |
          docker build -t $DOCKER_IMAGE:$GITHUB_SHA .
          docker push $DOCKER_IMAGE:$GITHUB_SHA

  deploy-to-gke:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          version: '>= 410.0.0'  # Ensures gke-gcloud-auth-plugin is included
          install_components: 'gke-gcloud-auth-plugin'
      
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_CREDRIFTIALS }}
      
      - name: Configure kubectl
        run: |
          gcloud components update
          gcloud container clusters get-credentials $GKE_CLUSTER \
            --zone $GKE_ZONE \
            --project ${{ secrets.GCP_PROJECT_ID }}
          kubectl config use-context gke_${{ secrets.GCP_PROJECT_ID }}_$GKE_ZONE_$GKE_CLUSTER
      
      - name: Deploy to GKE
        run: |
          # Update deployment (removed deprecated --record flag)
          kubectl set image deployment/$APP_NAME $APP_NAME=$DOCKER_IMAGE:$GITHUB_SHA
          kubectl rollout status deployment/$APP_NAME --timeout=3m
          kubectl apply -f k8s/service.yaml
      
      - name: Verify deployment
        run: |
          kubectl wait --for=condition=Ready pod -l app=$APP_NAME --timeout=2m
          POD_NAME=$(kubectl get pods -l app=$APP_NAME -o jsonpath='{.items[0].metadata.name}')
          kubectl exec $POD_NAME -- curl -s http://localhost:3000/health
      
      - name: Rollback if deployment fails
        if: failure()
        run: |
          echo "ðŸš¨ Initiating rollback..."
          kubectl rollout undo deployment/$APP_NAME
          kubectl rollout status deployment/$APP_NAME
          echo "âœ… Rollback complete!"
